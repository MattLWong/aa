{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Cambria;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww8720\viewh10200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs30 \cf0 Object equality: they check the same location in memory (comparison by reference). you need to use Object.getOwnPropertyNames(obj) then iterate through each property and compare the two objects\
\
permutation question: I did it the hard way. there are two easier ways to do this (compare each letter count, and compare them sorted). \
\
permutation goes by factorial\
\
set object lets you store unique values of an array, which can be convert back to an array with Array.from(new Set(oldArray))\
\
parseInt() = parse into Int\
\
Integer.toString()\
\
}