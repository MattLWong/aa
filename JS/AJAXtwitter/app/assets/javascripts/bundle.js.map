{"version":3,"sources":["webpack/bootstrap 5694ddd4660c6b062678","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/api_util.js","./frontend/users_search.js","./frontend/tweet_compose.js","./frontend/infinite_tweets.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAwE;AACxE;AACA;AACA;AACA,EAAC;;;;;;;ACXD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpDA;;AAEA;;AAEA;;AAEA;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAgC,QAAQ;;AAExC;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;;AAEA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,uBAAuB,IAAI,6BAA6B;AAC3G,SAAQ;AACR,2BAA0B,YAAY,qBAAqB,YAAY,IAAI,kBAAkB,UAAU,eAAe,MAAM,gBAAgB;AAC5I;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,sBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,+CAA8C,iBAAiB,GAAG,cAAc,sBAAsB,cAAc,IAAI,oBAAoB,UAAU,iBAAiB;AACvK,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,aAAa,oCAAoC,mBAAmB,UAAU,gBAAgB;;AAE9H;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5694ddd4660c6b062678","const FollowToggle = require('./follow_toggle');\nconst UsersSearch = require('./users_search');\nconst TweetCompose = require('./tweet_compose');\nconst InfiniteTweets = require('./infinite_tweets');\n\n$(function() {\n  // el is NOT a jquery object\n  $('button.follow-toggle').each( (index, el) => new FollowToggle(el, {}));\n  $('nav.users-search').each( (idx, el) => new UsersSearch(el));\n  $('form.tweet-compose').each( (idx, el) => new TweetCompose(el));\n  $('div.infinite-tweets').each( (idx, el) => new InfiniteTweets(el));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 0\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass FollowToggle {\n  constructor(el, options) {\n    this.$el = $(el);\n    this.userId = this.$el.data('user-id') || options.userId;\n    this.followState = (this.$el.data('initial-follow-state') || options.followState)\n    this.render();\n    this.$el.on('click', this.handleClick.bind(this))\n  }\n\n  handleClick(event) {\n    const followToggle = this;\n    event.preventDefault();\n\n    if(this.followState == \"followed\") {\n      this.followState = 'unfollowing...';\n      this.render();\n      APIUtil.unfollowUser(this.userId).then(() => {\n        followToggle.followState = 'unfollowed';\n        followToggle.render();\n      });\n    } else if (this.followState == \"unfollowed\") {\n      this.followState = 'following...'\n      this.render();\n      APIUtil.followUser(this.userId).then(() => {\n        followToggle.followState = 'followed';\n        followToggle.render();\n      });\n    }\n  }\n\n  render() {\n    switch(this.followState){\n      case 'followed':\n        this.$el.prop('disabled', false);\n        this.$el.html(\"Unfollow!\");\n        break;\n      case 'unfollowed':\n        this.$el.prop('disabled', false);\n        this.$el.html(\"Follow!\");\n        break;\n      case 'unfollowing...':\n        this.$el.prop('disabled', true);\n        this.$el.html(\"Unfollowing...\");\n      case 'following...':\n        this.$el.prop('disabled', true);\n        this.$el.html('Following...')\n    }\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 1\n// module chunks = 0","const APIUtil = {\n\n  followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\n\n  unfollowUser: id => APIUtil.changeFollowStatus(id, \"DELETE\"),\n\n  changeFollowStatus:  (id, method) => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: 'json',\n      method\n    })\n  ),\n\n  searchUsers: query => (\n    $.ajax({\n      url: '/users/search',\n      method: \"get\",\n      data: { query },\n      dataType: 'json'\n    })\n  ),\n\n  createTweet: tweet => (\n    $.ajax({\n      url: '/tweets',\n      method: 'POST',\n      data: { tweet },\n      dataType: 'json'\n    })\n  ),\n\n  fetchTweets: ( max ) => (\n    $.ajax({\n      url: '/feed',\n      method: 'GET',\n      data: { max_created_at: max },\n      dataType: 'json'\n    })\n  )\n}\n\nmodule.exports = APIUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/api_util.js\n// module id = 2\n// module chunks = 0","//transport the while object\nconst APIUtil = require('./api_util');\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n  constructor(el) {\n    this.$el = $(el);\n    this.$input = this.$el.find('input[name=username]');\n    this.$ul = this.$el.find('ul.users');\n\n    this.$input.on('input', this.handleChange.bind(this));\n  }\n\n  handleChange(event) {\n    if (this.$input.val() === \"\") {\n      this.render([]);\n      return;\n    }\n\n    APIUtil.searchUsers(this.$input.val())\n      .then(users => this.render(users));\n  }\n\n  render(users) {\n    this.$ul.empty();\n    users.forEach( user => {\n      let $a = $('<a></a>');\n      $a.text(user.username);\n      $a.attr('href', `/users/${user.id}`);\n\n      let $followToggle = $('<button></button>');\n      new FollowToggle($followToggle, {\n        userId: user.id,\n        followState: user.followed ? 'followed' : 'unfollowed'\n      })\n      let $li = $('<li></li>');\n      $li.append($a);\n      $li.append($followToggle);\n\n      this.$ul.append($li);\n\n    })\n  }\n}\n\nmodule.exports = UsersSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/users_search.js\n// module id = 3\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass TweetCompose {\n  constructor(el) {\n    this.$el = $(el);\n    this.$textarea = this.$el.find(\"textarea\");\n    this.$mention = this.$el.find(\"select\");\n    const TweetCompose = this;\n    this.$el.on('submit', TweetCompose.submitFunction.bind(this));\n    this.$textarea.on('keyup', TweetCompose.maxChar.bind(this));\n    $('a.add-mentioned-user').on('click', this.addMentionedUser.bind(this));\n    $('div.mentioned-users').on('click', \"a.remove-mentioned-user\", function(e) {\n      TweetCompose.removeMentionedUser.call(this, e)\n    });\n  }\n  //\n  submitFunction(event) {\n    let that = this;\n    event.preventDefault();\n    let tweet = this.$el.serializeJSON().tweet;\n    this.$el.find(':input').prop('disabled', true);\n    APIUtil.createTweet(tweet)\n      .then( res => {\n        that.handleSuccess.call(that, res)\n      })\n  }\n\n  handleSuccess(res) {\n    // this.clearInput();\n    this.$el.find(':input').prop('disabled', false);\n    this.clearInput();\n    const $tweetsUl = $(this.$el.data('tweets-ul'));\n    $tweetsUl.trigger('insert-tweet', res);\n\n    // let mentioned_users = \"\"\n    //\n    // res.mentions.forEach( (mentioned_user) => {\n    //   mentioned_users += `<li><a href=\"/users/${mentioned_user.user_id}\">${mentioned_user.user.username}</a></li>`\n    // })\n    // let $li = $(`<li>${res.content} -- <a href=\"/user/${res.user_id}\">${res.user.username}</a> -- ${res.created_at}<ul>${mentioned_users}</ul></li>`);\n    // $('#feed').prepend($li);\n\n  }\n\n  clearInput() {\n    this.$textarea.val(\"\");\n    this.$mention.val(0);\n    $('.char-left').text(\"\");\n    $('div.mentioned-users').empty();\n  }\n\n  maxChar(event) {\n    let characters = this.$textarea.val().length;\n    $('.char-left').text((140 - characters).toString() + \" characters left\");\n  }\n\n  addMentionedUser(e) {\n    e.preventDefault();\n    let script = $(\"script.select-mentions\").html();\n    $('div.mentioned-users').append(script);\n    return false;\n  }\n\n  removeMentionedUser(e) {\n    e.preventDefault();\n    $(this).parent().remove();\n  }\n}\n\nmodule.exports = TweetCompose;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/tweet_compose.js\n// module id = 4\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass InfiniteTweets {\n  constructor(el) {\n    this.$el = $(el);\n    this.$a = this.$el.find(\"a.fetch-more\")\n    this.maxCreatedAt = null;\n    this.$a.on(\"click\", this.fetchTweets.bind(this, event));\n    APIUtil.fetchTweets()\n      .then(res => this.insertTweets.call(this, res))\n    this.$el.on('insert-tweet', this.insertTweet.bind(this));\n  }\n\n  fetchTweets(event) {\n    event.preventDefault();\n    if (this.maxCreatedAt == null) {\n      APIUtil.fetchTweets()\n        .then(res => this.insertTweets.call(this, res))\n    } else {\n      APIUtil.fetchTweets(this.maxCreatedAt)\n        .then(res => this.insertTweets.call(this, res))\n    }\n\n    var $target = $('html,body');\n    $target.animate({scrollTop: $target.height()});\n  }\n\n  insertTweets(res) {\n    res.forEach( (tweet) => {\n      $('ul#feed').append(`<li data-created=${tweet.created_at}>${tweet.content} -- <a href=\"/users/${tweet.user_id}\">${tweet.user.username}</a> -- ${tweet.created_at}</li>`);\n    })\n    this.maxCreatedAt = $('ul#feed li').last().attr('data-created')\n    if (res.length < 20) {\n      $('a.fetch-more').text(\"No more tweets\")\n    }\n  }\n\n  insertTweet(event, data) {\n    debugger;\n    $('ul#feed').prepend(`<li>${data.content} -- <a href=\"/users/data.user_id\">${data.user.username}</a> -- ${data.created_at}</li>`)\n\n    if (!this.lastCreatedAt) {\n      this.lastCreatedAt = data.created_at;\n    }\n  }\n}\n\nmodule.exports = InfiniteTweets;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/infinite_tweets.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}